@*
	Iván Loire - www.iloire.com
	Please readme README file for license terms.

	ASP.NET MVC3 ACME Invocing app (demo app for training purposes)
*@

@model IPagedList<Invoice>
@using MvcPaging;

@{
    ViewBag.Title = "Index";
}

<h1>List <small>of Invoice</small></h1>

<p>
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn" })
</p>

<div class="pagingContainer">
    @Html.Pager(Model.PageSize, Model.PageNumber, Model.TotalItemCount)
</div>

<table class="zebra-striped">
    <thead>
        <th>
            Customer
        </th>
         <th>
            Notes
        </th>
        <th>
            Created
        </th>
         <th>
            Net Amount
        </th>
         <th>
            Total (with VAT)
        </th>
        <th>
            Paid
        </th>

        <th></th>
    </thead>

@foreach (var item in Model)
{
    <tr>
        <td>
            <a href="@Url.Action("Details", "Customer", new { id=item.CustomerID})">
            @Html.DisplayFor(modelItem => item.Customer.Name)
            </a>
        </td>
         <td>
            @Html.DisplayFor(modelItem => item.Notes)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TimeStamp)
        </td>
        <td>
            @Math.Round(item.InvoiceDetails.Sum(i => i.Total),2)
        </td>
         <td>
            @Math.Round(item.InvoiceDetails.Sum(i => i.TotalPlusVAT),2)
        </td>
        <td>
            
            @if (!item.Paid)
            {
             <span class="label important">UNPAID</span>
            }
            else
            {
            <span class="label success">PAID</span>  
            }
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.InvoiceID }, new { @class = "btn primary" }) 
            @Html.ActionLink("Print", "Print", new { id = item.InvoiceID }, new { target = "_blank", @class = "btn" }) 
            @Html.ActionLink("Delete", "Delete", new { id = item.InvoiceID }, new { @class = "btn" })
        </td>
    </tr>
}

</table>
